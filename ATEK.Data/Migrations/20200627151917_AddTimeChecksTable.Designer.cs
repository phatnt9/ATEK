// <auto-generated />
using System;
using ATEK.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ATEK.Data.Migrations
{
    [DbContext(typeof(AccessControlContext))]
    [Migration("20200627151917_AddTimeChecksTable")]
    partial class AddTimeChecksTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ATEK.Domain.Models.ActiveTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FromTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileGateGateId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileGateProfileId")
                        .HasColumnType("int");

                    b.Property<string>("ToTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileGateProfileId", "ProfileGateGateId");

                    b.ToTable("ActiveTime");
                });

            modelBuilder.Entity("ATEK.Domain.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("ATEK.Domain.Models.Gate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirebaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FirebaseId")
                        .IsUnique()
                        .HasFilter("[FirebaseId] IS NOT NULL");

                    b.ToTable("Gates");
                });

            modelBuilder.Entity("ATEK.Domain.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("ATEK.Domain.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActiveTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CheckDateToLock")
                        .HasColumnType("bit");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateToLock")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pinno")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("Pinno")
                        .IsUnique()
                        .HasFilter("[Pinno] IS NOT NULL");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("ATEK.Domain.Models.ProfileGate", b =>
                {
                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("GateId")
                        .HasColumnType("int");

                    b.HasKey("ProfileId", "GateId");

                    b.HasIndex("GateId");

                    b.ToTable("ProfileGate");
                });

            modelBuilder.Entity("ATEK.Domain.Models.ProfileGroup", b =>
                {
                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("ProfileId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("ProfileGroup");
                });

            modelBuilder.Entity("ATEK.Domain.Models.TimeCheck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GateFirebaseId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pinno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timecheck")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TimeChecks");
                });

            modelBuilder.Entity("ATEK.Domain.Models.ActiveTime", b =>
                {
                    b.HasOne("ATEK.Domain.Models.ProfileGate", "ProfileGate")
                        .WithMany("ActiveTimes")
                        .HasForeignKey("ProfileGateProfileId", "ProfileGateGateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATEK.Domain.Models.Profile", b =>
                {
                    b.HasOne("ATEK.Domain.Models.Class", "Class")
                        .WithMany("Profiles")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATEK.Domain.Models.ProfileGate", b =>
                {
                    b.HasOne("ATEK.Domain.Models.Gate", "Gate")
                        .WithMany("ProfileGates")
                        .HasForeignKey("GateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATEK.Domain.Models.Profile", "Profile")
                        .WithMany("ProfileGates")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATEK.Domain.Models.ProfileGroup", b =>
                {
                    b.HasOne("ATEK.Domain.Models.Group", "Group")
                        .WithMany("ProfileGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATEK.Domain.Models.Profile", "Profile")
                        .WithMany("ProfileGroups")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
